Menu="Utilities"
Icon="ddns-go.png"
Title="DDns-Go"
Type="xmenu"
Tabs="true"
Markdown="false"
---


<?php
header('Content-Type: application/json');

$script = '/etc/rc.d/rc.ddns-go';

function runCmd($cmd) {
    global $script;
    if (!file_exists($script)) {
        return ['success' => false, 'message' => "找不到脚本 $script"];
    }
    exec("/bin/bash $script $cmd 2>&1", $out, $ret);
    return ['success' => $ret === 0, 'message' => implode("\n", $out), 'ret' => $ret];
}

function getStatus() {
    global $script;
    exec("/bin/bash $script status 2>&1", $out, $ret);
    return ['status' => ($ret === 0 ? 'running' : 'stopped'), 'output' => $out];
}

$action = $_GET['action'] ?? '';

if (!$action) {
    echo json_encode(['success'=>false,'message'=>'未指定action']);
    exit;
}

switch ($action) {
    case 'statusService':
        $st = getStatus();
        echo json_encode(['success'=>true, 'status'=>$st['status'], 'output'=>$st['output']]);
        break;
    case 'startService':
    case 'stopService':
    case 'restartService':
        $res = runCmd(str_replace('Service','',$action));
        $st = getStatus();
        echo json_encode([
            'success' => $res['success'],
            'message' => $res['message'],
            'status' => $st['status']
        ]);
        break;
    default:
        echo json_encode(['success'=>false,'message'=>"未知action：$action"]);
}
exit;
?>


<script src="/jquery.min.js"></script>
<style>
button { margin-right: 10px; padding: 8px 12px; background: #444; color: #eee; border: none; border-radius: 4px; cursor: pointer; }
button:disabled { background: #666; cursor: not-allowed; }
#status { margin-bottom: 20px; font-weight: bold; }
.status-running { color: #4CAF50; }
.status-stopped { color: #F44336; }
</style>


<h2>ddns-go 服务管理</h2>

<p id="status" class="status-unknown">状态：检测中...</p>

<button id="startBtn" disabled>启动</button>
<button id="stopBtn" disabled>停止</button>
<button id="restartBtn" disabled>重启</button>
<button id="refreshBtn">刷新状态</button>

<script>
function log(msg) {
    console.log(msg);
}

function updateButtons(status) {
    if(status === 'running') {
        document.getElementById('startBtn').disabled = true;
        document.getElementById('stopBtn').disabled = false;
        document.getElementById('restartBtn').disabled = false;
    } else if(status === 'stopped') {
        document.getElementById('startBtn').disabled = false;
        document.getElementById('stopBtn').disabled = true;
        document.getElementById('restartBtn').disabled = true;
    } else {
        document.getElementById('startBtn').disabled = true;
        document.getElementById('stopBtn').disabled = true;
        document.getElementById('restartBtn').disabled = true;
    }
}

function setStatus(text, cssClass) {
    let statusEl = document.getElementById('status');
    statusEl.textContent = '状态：' + text;
    statusEl.className = cssClass || '';
}

function fetchStatus() {
    setStatus('检测中...', '');
    fetch('?action=statusService')
    .then(res=>res.json())
    .then(data=>{
        log('状态检测返回: ' + JSON.stringify(data));
        if(data.success) {
            let st = data.status;
            setStatus(st === 'running' ? '🟢 运行中' : (st === 'stopped' ? '🔴 已停止' : '未知'), 'status-' + st);
            updateButtons(st);
        } else {
            setStatus('状态获取失败: ' + data.message, 'status-stopped');
            updateButtons(null);
        }
    }).catch(err=>{
        log('请求错误: ' + err);
        setStatus('请求错误', 'status-stopped');
        updateButtons(null);
    });
}

function sendCommand(action) {
    setStatus('发送命令中...', '');
    updateButtons(true);
    fetch('?action=' + action)
    .then(res=>res.json())
    .then(data=>{
        log('命令返回: ' + JSON.stringify(data));
        alert(data.message || (data.success ? '操作成功' : '操作失败'));
        fetchStatus();
    }).catch(err=>{
        log('命令请求错误: ' + err);
        alert('请求失败');
        fetchStatus();
    });
}

document.getElementById('startBtn').onclick = () => sendCommand('startService');
document.getElementById('stopBtn').onclick = () => sendCommand('stopService');
document.getElementById('restartBtn').onclick = () => sendCommand('restartService');
document.getElementById('refreshBtn').onclick = fetchStatus;

window.onload = fetchStatus;
</script>
