Menu="Utilities"
Icon="ddns-go.png"
Title="DDns-Go"
Type="xmenu"
Tabs="true"
Markdown="false"
---

<?php
// 统一返回 JSON
function sendResponse($success, $message, $status = null) {
    header('Content-Type: application/json');
    echo json_encode([
        'success' => $success,
        'message' => $message,
        'status'  => $status
    ]);
    exit;
}

// 执行 rc.ddns-go 命令
function runServiceCommand($cmd) {
    $script = '/etc/rc.d/rc.ddns-go';
    if (!file_exists($script)) {
        return ['success' => false, 'message' => "服务脚本不存在: $script"];
    }
    $output = [];
    $ret = 1;
    exec("/bin/bash $script $cmd 2>&1", $output, $ret);
    return [
        'success' => ($ret === 0),
        'message' => implode("\n", $output),
        'ret'     => $ret
    ];
}

// 状态检测
function getServiceStatus() {
    exec("bash /etc/rc.d/rc.ddns-go status", $output, $exitCode);

    if ($exitCode === 0) {
        return 'running';
    } else {
        return 'stopped';
    }
}


// 处理 AJAX 请求
if (isset($_GET['action'])) {
    switch ($_GET['action']) {
        case 'statusService':
            $status = getServiceStatus();
            sendResponse(true, "状态检测完成", $status);
        case 'startService':
            $res = runServiceCommand('start');
            sendResponse($res['success'], $res['message'], getServiceStatus());
        case 'stopService':
            $res = runServiceCommand('stop');
            sendResponse($res['success'], $res['message'], getServiceStatus());
        case 'restartService':
            $res = runServiceCommand('restart');
            sendResponse($res['success'], $res['message'], getServiceStatus());
        default:
            sendResponse(false, "未知操作: " . $_GET['action']);
    }
}
?>

<style>
    body { font-family: Arial, sans-serif; padding: 20px; }
    #status { font-weight: bold; }
    button { padding: 5px 10px; margin-right: 10px; }
    .running { color: green; }
    .stopped { color: red; }
    .unknown { color: gray; }
</style>


<h2>DDns-go 服务管理</h2>
<p id="status" class="unknown">当前状态: 检测中...</p>

<button id="startBtn" onclick="sendAction('startService')">启动</button>
<button id="stopBtn" onclick="sendAction('stopService')">停止</button>
<button id="restartBtn" onclick="sendAction('restartService')">重启</button>
<button onclick="refreshStatus()">刷新状态</button>

<script>
function refreshStatus() {
    fetch('?action=statusService')
        .then(res => res.json())
        .then(data => {
            let statusEl = document.getElementById('status');
            let startBtn = document.getElementById('startBtn');
            let stopBtn = document.getElementById('stopBtn');
            let restartBtn = document.getElementById('restartBtn');

            if (data.success) {
                statusEl.innerText = '当前状态: ' + data.status;
                statusEl.className = data.status === 'running' ? 'running' :
                                     data.status === 'stopped' ? 'stopped' : 'unknown';

                if (data.status === 'running') {
                    startBtn.disabled = true;
                    stopBtn.disabled = false;
                    restartBtn.disabled = false;
                } else {
                    startBtn.disabled = false;
                    stopBtn.disabled = true;
                    restartBtn.disabled = true;
                }
            } else {
                statusEl.innerText = '状态获取失败: ' + (data.message || '');
                statusEl.className = 'unknown';
                startBtn.disabled = false;
                stopBtn.disabled = true;
                restartBtn.disabled = true;
            }
        })
        .catch(err => {
            console.error(err);
        });
}

function sendAction(action) {
    fetch('?action=' + action)
        .then(res => res.json())
        .then(data => {
            alert(data.message || (data.success ? '操作成功' : '操作失败'));
            refreshStatus();
        })
        .catch(err => {
            console.error(err);
        });
}

window.onload = refreshStatus;
</script>

